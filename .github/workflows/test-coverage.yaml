name: Test Coverage
on:
  pull_request_target:
    types:
      - opened
      - reopened
      - auto_merge_enabled
      - auto_merge_disabled
      - synchronize
    branches:
      - release/**
      - main
jobs:
  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run test coverage
        run: pnpm run test:coverage

      - name: Generate coverage reports
        run: |
          pnpm run generate-coverage
          ls -l

      - name: Upload coverage reports artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COVERAGE_NAME }}
          path: ${{ vars.COVERAGE_PATH }}

  push-coverage:
    runs-on: ubuntu-latest
    if: success()
    needs: test-coverage
    steps:
      - name: Push coverage to codecov
        run: |
          echo "Push coverage..."

  notify:
    runs-on: ubuntu-latest
    if: always()
    needs: push-coverage
    steps:
      - uses: actions/checkout@v4

      - name: Send notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_CI_TEST_COVERAGE }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_MESSAGE: |
            - *Branch:* ${{ github.ref_name }}
            - *Status:* `${{ job.status == 'success' && 'passed ‚úÖ' || 'failed ‚ùå' }}`
            - *Commit:* `${{ github.event.pull_request.commits }}`
            - *By:* `${{ github.actor }}`

            - [üîó View Workflow Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})