name: Deploy
run-name: 'deploy: ${{ github.sha }}'
on:
  workflow_dispatch:
    inputs:
      landing_api:
        type: boolean
        required: true
        default: false
        description: Landing api (GraphQL)
      personal_web:
        type: boolean
        required: true
        default: false
        description: Landing web
      environment:
        type: choice
        description: Which server environment would you like to deploy?
        options:
          - staging
          - production
jobs:
  deploy-landing-web:
    if: inputs.personal_web == true &&
      (
        (inputs.environment == 'staging') ||
        (inputs.environment == 'production' && 
          (
            startsWith(github.ref, 'refs/heads/release/') || 
            startsWith(github.ref, 'refs/heads/main/') 
          )
        )
      )
    uses: ./.github/workflows/wc-deploy-schema.yaml
    with:
      artifact_name: personal-web-artifact
      environment: ${{ inputs.environment }}
    secrets:
      org_id: ${{ secrets.VERCEL_ORG_ID }}
      project_id: ${{ secrets.VERCEL_WEB_LANDING_ID }}
      token: ${{ secrets.VERCEL_TOKEN }}

  deploy-landing-api:
    if: inputs.landing_api == true &&
      (
        (inputs.environment == 'staging') ||
        (inputs.environment == 'production' && 
          (
            startsWith(github.ref, 'refs/heads/release/') || 
            startsWith(github.ref, 'refs/heads/main/') 
          )
        )
      )
    uses: ./.github/workflows/wc-deploy-schema.yaml
    with:
      artifact_name: landing-api-artifact
      environment: ${{ inputs.environment }}
      pre_built: true
      pre_built_cmd: |
        pnpm i
        npx nx build @oxcyn-apps/landing-api
    secrets:
      org_id: ${{ secrets.VERCEL_ORG_ID }}
      project_id: ${{ secrets.VERCEL_API_LANDING_ID }}
      token: ${{ secrets.VERCEL_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    if: always()
    needs: [deploy-landing-web, deploy-landing-api]
    steps:
      - uses: actions/checkout@v4

      - name: Send notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_CI_DEPLOYMENT }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_MESSAGE: |
            - *Branch:* ${{ github.ref_name }}
            - *Status:* `${{ job.status == 'success' && 'passed ‚úÖ' || 'failed ‚ùå' }}`
            - *Env:* `${{ inputs.environment }}`
            - *By:* `${{ github.actor }}`

            - üñ•Ô∏è *Landing Web:* `${{ needs.deploy-landing-web.outputs.deployment_url || 'N/A' }}`
            - üì° *Landing API:* `${{ needs.deploy-landing-api.outputs.deployment_url || 'N/A' }}`

            - [üîó View Workflow Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})